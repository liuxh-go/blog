(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{225:function(t,s,a){"use strict";a.r(s);var e=a(0),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"初篇"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初篇"}},[t._v("#")]),t._v(" 初篇")]),t._v(" "),a("h2",{attrs:{id:"一、博客的搭建以及自动化部署更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、博客的搭建以及自动化部署更新"}},[t._v("#")]),t._v(" 一、博客的搭建以及自动化部署更新")]),t._v(" "),a("h3",{attrs:{id:"本博客采用vuepress框架进行搭建-具体搭建方法请查看官方文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本博客采用vuepress框架进行搭建-具体搭建方法请查看官方文档"}},[t._v("#")]),t._v(" 本博客采用vuepress框架进行搭建,具体搭建方法请查看官方文档")]),t._v(" "),a("h3",{attrs:{id:"使用github托管项目代码-项目的自动化构建步骤如下"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用github托管项目代码-项目的自动化构建步骤如下"}},[t._v("#")]),t._v(" 使用Github托管项目代码,项目的自动化构建步骤如下:")]),t._v(" "),a("ol",[a("li",[t._v("初始化Github仓库并将项目代码放置于master分支")]),t._v(" "),a("li",[t._v("新建gh-pages分支用于放置构建后的代码")]),t._v(" "),a("li",[t._v("使用Travis将代码仓库设置自动化构建发布,设置推送master代码时自动构建发布到gh-pages分支")]),t._v(" "),a("li",[t._v("在博客服务器上搭建自动pull服务器,使用githooks设置回调,当gh-pages分支有新推送时触发自动pull脚本,实现自动更新"),a("a",{attrs:{href:"https://github.com/wshhz/gitHookServer",target:"_blank",rel:"noopener noreferrer"}},[t._v("gitHookServer"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"在搭建自动化构建发布更新的过程中遇到了一些问题如下"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在搭建自动化构建发布更新的过程中遇到了一些问题如下"}},[t._v("#")]),t._v(" 在搭建自动化构建发布更新的过程中遇到了一些问题如下:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("githooks的使用"),a("br"),t._v("\n在github项目设置界面的"),a("code",[t._v("Webhooks")]),t._v("选项中设置")])]),t._v(" "),a("li",[a("p",[t._v("golang执行shell命令"),a("br"),t._v("\n使用"),a("code",[t._v("exec.Cmd()")]),t._v("方法;"),a("br"),t._v("\n注意多条命令需用"),a("code",[t._v("&&")]),t._v("连接在一起拼接成单条命令执行")])]),t._v(" "),a("li",[a("p",[t._v("git强制使用远程代码覆盖本地代码")])])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch --all\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard origin/"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${branch_name}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("ul",[a("li",[t._v("新建develop分支用于开发,只有当合并且推送到master分支时才会触发自动化构建发布流程")])])])}),[],!1,null,null,null);s.default=r.exports}}]);